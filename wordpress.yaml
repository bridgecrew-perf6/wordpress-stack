#---------------------------------------- Wordpress Resources ----------------------------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress-stack
  labels:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/tier: frontend 
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/environment: dev
    app.kubernetes.io/namespace: wordpress-stack
    app.kubernetes.io/part-of: wordpress-project      
spec: 
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: wordpress
        app.kubernetes.io/tier: frontend 
        app.kubernetes.io/version: "0.1"
        app.kubernetes.io/environment: dev
        app.kubernetes.io/namespace: wordpress-stack
        app.kubernetes.io/part-of: wordpress-project
    template:
      metadata:
        labels:  
          app.kubernetes.io/name: wordpress
          app.kubernetes.io/tier: frontend 
          app.kubernetes.io/version: "0.1"
          app.kubernetes.io/environment: dev
          app.kubernetes.io/namespace: wordpress-stack
          app.kubernetes.io/part-of: wordpress-project
      spec:
        containers:
          - name: wordpress
            image: wordpress:5
            envFrom:
              - configMapRef:
                  name: wordpress-credentials
            ports:
              - containerPort: 80
            volumeMounts:
              - name: wordpress-storage
                mountPath: /var/www/html
        volumes:
          - name: wordpress-storage
            # emptyDir:
            persistentVolumeClaim:
              claimName: wordpress-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: wordpress-storage
  namespace: wordpress-stack
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi
  storageClassName: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-credentials
  namespace: wordpress-stack
data:            
  WORDPRESS_DB_HOST: mysql
  WORDPRESS_DB_USER: admin
  WORDPRESS_DB_PASSWORD: strong-user-pass
  WORDPRESS_DB_NAME: wordpress
  WORDPRESS_TABLE_PREFIX: ir_ 

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress-stack
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/tier: frontend 
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/environment: dev
    app.kubernetes.io/namespace: wordpress-stack
    app.kubernetes.io/part-of: wordpress-project
  ports:
    - port: 80